python train.py \
  --dataroot /home/burak/development/pytorch-CycleGAN-and-pix2pix/datasets/driving_rgb2domain2_cyclegan \
  --name driving_rgb2domain2_cyclegan_rect \
  --model cycle_gan \
  --preprocess resize_rect --load_width 400 --load_height 300 \
  --display_freq 200 --print_freq 100 --update_html_freq 1000 \
  --save_latest_freq 1000 --save_epoch_freq 5 \
  --n_epochs 20 --n_epochs_decay 10 \
  --use_wandb --wandb_project_name cyclegan_v1 \
  --wandb_run_name "driving_rect_domain2_20e_10d" \
  --wandb_dir /home/burak/development/pytorch-CycleGAN-and-pix2pix/logs

# v3

python train.py \
  --dataroot /home/burak/development/pytorch-CycleGAN-and-pix2pix/datasets/driving_rgb2domain2_cyclegan \
  --name driving_rgb2domain2_cyclegan_rect_v3 \
  --model cycle_gan \
  --preprocess resize_rect --load_width 400 --load_height 300 \
  --display_freq 200 --print_freq 100 --update_html_freq 2000 \
  --save_latest_freq 2000 --save_epoch_freq 10 \
  --n_epochs 100 --n_epochs_decay 50 \
  --ngf 128 --ndf 128 \
  --no_html \
  --use_wandb --wandb_project_name cyclegan_v3 \
  --wandb_run_name "driving_rect_v3_128f_100e_50d" \
  --wandb_dir /home/burak/development/pytorch-CycleGAN-and-pix2pix/logs

# complex

python train.py \
  --dataroot /home/burak/development/pytorch-CycleGAN-and-pix2pix/datasets/driving_rgb2domain2_cyclegan \
  --name driving_rgb2domain2_cyclegan_rect_amp_fast \
  --model cycle_gan \
  --preprocess resize_rect,flip --load_width 400 --load_height 300 \
  --display_freq 500 --print_freq 100 --update_html_freq 2000 \
  --save_latest_freq 5000 --save_epoch_freq 10 \
  --ngf 128 --ndf 128 --netG resnet_9blocks \
  --n_epochs 100 --n_epochs_decay 50 \
  --amp \
  --no_html \
  --use_wandb --wandb_project_name cyclegan_v2 \
  --wandb_run_name "driving_rect_amp_fast_128f_9b_400x300" \
  --wandb_dir /home/burak/development/pytorch-CycleGAN-and-pix2pix/logs

# pix2pix

python train.py \
  --dataroot /home/burak/development/pytorch-CycleGAN-and-pix2pix/datasets/driving_rgb2domain2 \
  --name driving_rgb2domain2_pix2pix \
  --model pix2pix \
  --direction AtoB \
  --preprocess resize_rect \
  --load_width 400 --load_height 300 \
  --n_epochs 100 --n_epochs_decay 100 \
  --batch_size 4 \
  --save_epoch_freq 5 \
  --ngf 128 \
  --ndf 128 \
  --netD n_layers \
  --n_layers_D 4 \
  --use_wandb --wandb_project_name pix2pix_v1 \
  --wandb_run_name "driving_rect_v3_128f_100e_100d" \
  --wandb_dir /home/burak/development/pytorch-CycleGAN-and-pix2pix/logs

# test
python test.py \
  --dataroot /home/burak/development/pytorch-CycleGAN-and-pix2pix/datasets/driving_rgb2domain2_cyclegan/testA \
  --name driving_rgb2domain2_cyclegan_rect_v3 \
  --model test \
  --model_suffix _A \
  --direction AtoB \
  --epoch latest \
  --num_test 400 \
  --preprocess resize_rect \
  --ngf 128 --ndf 128 \
  --load_width 400 --load_height 300 \
  --results_dir ./results \
  --no_dropout \
  --eval

Example for Epoch 1: epoch001_real_A.png : Your input images
epoch001_fake_B.png : How domain A images look in domain B style
epoch001_rec_A.png : How well the cycle (A→B→A) preserves the original
epoch001_idt_A.png : How the generator handles same-domain input
What to Look For:
Good training: fake_B should look like domain B, rec_A should look like original A
Identity test: idt_A should look very close to real_A
Issues: If idt_A is distorted, the model might be overfitting or the learning rate is too high

# prepare datasets
python scripts/prepare_jpg_datasets.py \
  --source-root jpg_dataset \
  --output-root datasets \
  --camera rgb_front \
  --mode pix2pix cyclegan \
  --same-train-test